input {
  file {
    type => "nginx-access"
    path => "/usr/share/logstash/container-logs/**/nginx-access*"
    mode => "read"
    start_position => "beginning"
    file_completed_action => "log"
    file_completed_log_path => "/usr/share/logstash/logs/completed_nginx-access.log"
  }
  file {
    type => "nginx-error"
    path => "/usr/share/logstash/container-logs/**/nginx-error*"
    mode => "read"
    start_position => "beginning"
    file_completed_action => "log"
    file_completed_log_path => "/usr/share/logstash/logs/completed_nginx-error.log"
  }
  file {
    type => "php-error"
    path => "/usr/share/logstash/container-logs/**/php-error*"
    mode => "read"
    start_position => "beginning"
    file_completed_action => "log"
    file_completed_log_path => "/usr/share/logstash/logs/completed_php-error.log"
  }
  file {
    type => "php-fpm-error"
    path => "/usr/share/logstash/container-logs/**/php-fpm-error*"
    mode => "read"
    start_position => "beginning"
    file_completed_action => "log"
    file_completed_log_path => "/usr/share/logstash/logs/completed_php-fpm-error.log"
  }
}

## Add your filters / logstash plugins configuration here
filter {
  if [type] == "nginx-access" {
    grok {
      patterns_dir => "/usr/share/logstash/patterns"
      match => { "message" => "%{PANTHEON_NGINX_ACCESS}" }
      add_tag => ["nginx_access"]
      remove_field => "message"
    }
    geoip {
      source => "clientip"
    }
    date {
      match => [ "time", "dd/MMM/yyyy:HH:mm:ss Z" ]
      remove_field => "time"
    }
  }
  if [type] == "nginx-error" {
    grok {
      patterns_dir => "/usr/share/logstash/patterns"
      match => { "message" => "%{PANTHEON_NGINX_ERROR}" }
      add_tag => ["nginx_error"]
      remove_field => "message"
    }
    date {
      match => [ "time", "yyyy/MM/dd HH:mm:ss" ]
      remove_field => "time"
    }
  }
  if [type] == "php-error" {
    grok {
      patterns_dir => "/usr/share/logstash/patterns"
      match => { "message" => "%{PANTHEON_PHP_ERROR}" }
      add_tag => ["php_error"]
      remove_field => "message"
    }
    date {
      match => [ "time", "dd-MMM-yyyy HH:mm:ss ZZZ" ]
      remove_field => "time"
    }
  }
  if [type] == "php-fpm-error" {
    grok {
      patterns_dir => "/usr/share/logstash/patterns"
      match => { "message" => "%{PANTHEON_PHP_FPM_ERROR}" }
      add_tag => ["php_fpm_error"]
      remove_field => "message"
    }
    date {
      match => [ "time", "dd-MMM-yyyy HH:mm:ss" ]
      timezome => "UTC"
      remove_field => "time"
    }
  }
  if "_grokparsefailure" in [tags] {
    drop { }
  }
  mutate {
    add_field => { "read_timestamp" => "%{@timestamp}" }
  }
  fingerprint {
    concatenate_all_fields => true
    target => "[@metadata][fingerprint]"
    method => "MURMUR3"
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "elastic"
    password => "changeme"
    index => "logstash-%{[type]}-%{+YYYY.MM}"
    document_id => "%{[@metadata][fingerprint]}"
  }
}
